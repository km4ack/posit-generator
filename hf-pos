#!/bin/bash

APP_DIR="$(cd "$(dirname "$0")" && pwd)"
max_distance=2500
symbol="\`"
table="/"
VARAEIGHTY=${APP_DIR}/gateways/80mvaralist.txt
VARAFORTY=${APP_DIR}/gateways/40mvaralist.txt
VARATWENTY=${APP_DIR}/gateways/20mvaralist.txt
VARATHIRTY=${APP_DIR}/gateways/30mvaralist.txt
VARAFM=${APP_DIR}/gateways/varafm.txt
PACKET=${APP_DIR}/gateways/packet.txt
version=$(grep version ${APP_DIR}/pos-generator | head -1 | awk -F "=" '{print $2}')
#28JUNE2024 KM4ACK

HEADER(){
    clear;echo;echo
    echo "  ##########################"
    echo "  # Winlink Gateway to POS #"
    echo "  #     v${version} by KM4ACK       #"
    echo "  ##########################"
    echo
}

REMOVE() {
    #remove old vara files before downloading new ones
    if [ -f ${VARATHIRTY} ]; then
	    rm ${VARATHIRTY}
    fi

    if [ -f ${VARAEIGHTY} ]; then
        rm ${VARAEIGHTY}
    fi

    if [ -f ${VARAFORTY} ]; then
        rm ${VARAFORTY}
    fi

    if [ -f ${VARATWENTY} ]; then
        rm ${VARATWENTY}
    fi

    if	[ -f ${VARAFM} ]; then
	    rm ${VARAFM}
    fi

    if	[ -f ${PACKET} ]; then
	    rm ${PACKET}
    fi
}

DOWNLOAD(){
    mkdir -p ${APP_DIR}/gateways/
    echo "Downloading VARA FM list"
    pat rmslist -s --mode varafm --force-download >> ${VARAFM}
    echo "Downloading Packet List"
    pat rmslist -s --mode packet --force-download >> ${PACKET}
    echo "Downloading VARA HF 80M list"
    pat rmslist -s --band 80m --mode vara --force-download >> ${VARAEIGHTY}
    echo "Downloading VARA HF 40M list"
    pat rmslist -s --band 40m --mode vara --force-download >> ${VARAFORTY}
    echo "Downloading VARA HF 30M list"
    pat rmslist -s --band 30m --mode vara --force-download >> ${VARATHIRTY}
    echo "Downloading VARA HF 20M list"
    pat rmslist -s --band 20m --mode vara --force-download >> ${VARATWENTY}
    GET_INPUT
}

GET_INPUT(){
    HEADER
    echo "1) Create 20M VARA HF POS"
    echo "2) Create 30M VARA HF POS"
    echo "3) Create 40M VARA HF POS"
    echo "4) Create 80M VARA HF POS"
    echo "5) Download Gateway List"
    echo "6) Exit"
    echo;read -p "Please choose a number " ANS

    case $ANS in

        1)
        DOC=${APP_DIR}/gateways/20mvaralist.txt
        ;;

        2)
        DOC=${APP_DIR}/gateways/30mvaralist.txt
        ;;

        3)
        DOC=${APP_DIR}/gateways/40mvaralist.txt
        ;;

        4)
        DOC=${APP_DIR}/gateways/80mvaralist.txt
        ;;
        5)
        REMOVE
        DOWNLOAD
        ;;
        6)
        exit
        ;;
        *)
        echo;echo "$ANS is not a valid input"
        echo "Please choose a valid number"
        sleep 5
        GET_INPUT

    esac
    echo "Default search distance is ${max_distance}"
    read -p "Search Distance? " search_distance
    if [ ${search_distance} != ${max_distance} ]; then
        max_distance=${search_distance}
    fi
    if [ ${search_distance} = 0 ];then
        echo "Distance must be greater than 0"
        sleep 3
        GET_INPUT
    fi
}
GET_INPUT

#function will convert lat long for POS output file
LATLONG(){
    long=$(/usr/local/bin/locator ${grid} | grep Coord | awk '{print $4}' | sed 's/-//')
    lat=$(/usr/local/bin/locator ${grid} | grep Coord | awk '{print $8}')
    first_lat=$(echo ${lat} | awk -F "." '{print $1}')
    last_lat=$(echo ${lat} | awk -F "." '{print $2}')
    last_lat=$(echo ".${last_lat} * 60" | bc | cut -b1-5)
    last_lat=$(printf "%05.2f" ${last_lat})
    new_lat=${first_lat}${last_lat}

    first_long=$(echo ${long} | awk -F "." '{print $1}')
    last_long=$(echo ${long} | awk -F "." '{print $2}')
    last_long=$(echo ".${last_long} * 60" | bc | cut -b1-5)
    last_long=$(printf "%05.2f" ${last_long})
    new_long=${first_long}${last_long}
}

meters=$(echo ${DOC} | awk -F "/" '{print $NF}' | sed 's/.txt//')
output=$HOME/Desktop/winlink-${meters}.pos
if [ -f $output ]; then
    rm $output
fi
if [ ! -f ${DOC} ]; then
    echo "Gateway list not found. Use Pat Menu to"
    echo "download the gateway list and try again"
    echo "Hint: Pat Menu->Find Winlink Gateways->Download Gateway List"
    echo;read -n 1 -s -r -p "Press any key to continue"
    exit
fi
stations=$(wc -l $DOC | awk '{print $1}')
x=0
while read -r line; do
    clear;echo;echo
    echo "searching for stations less than ${max_distance}km away"
    echo "$stations to be processed"
    echo "Processing stations....standby"
    echo "$x stations processed"
    ((x++))    
    call=$(echo $line | awk '{print $1}')
    grid=$(echo $line | awk '{print $2}' | sed 's/\[//;s/\]//')
    freq=$(echo $line | awk -F "=" '{print $NF}')
    if [ "$freq" = 'VARA' ] || [ "$freq" = '500' ] || [ "$freq" = '2750' ]; then
        freq=$(echo $line | awk '{print $7}')
    fi
    distance=$(echo $line | awk '{print $3}')

    #ignore lines that are irrelevant
    if [ -z "$(echo ${line} | grep VARA)" ]; then
        continue
    fi

    #skip blank lines
    if [ -z "$call" ]; then
        continue
    fi

    #skip if distance is greater than max_distance
    if [ ${distance} -gt ${max_distance} ]; then
        continue
    fi
    call=`printf "%-9s" $call`
    LATLONG
    TIME="*192039h"
    echo ";${call}${TIME}${new_lat}N${table}${new_long}W${symbol}${distance}km away :: Dial Frequecy-${freq}" >> $output
done < $DOC
clear;echo;echo
count=$(wc -l $output | awk '{print $1}')
file_name=$(echo $output | awk -F "/" '{print $NF}')
HEADER
echo "SUCCESS!!"
echo "$x stations processed"
echo "$count met the search criteria of stations within ${max_distance}km"
echo "POS file is ${file_name} and is ready to be imported into YAAC"
echo;read -n 1 -s -r -p "Press any key to continue"






